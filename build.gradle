apply plugin: 'java'
apply plugin: 'install4j'
apply plugin: 'findbugs'
apply plugin: 'pmd'

configurations {
    izpackconf
}

buildscript {
      repositories {
          maven {
              url 'http://maven.ej-technologies.com/repository'
          }
      }
      dependencies {
           classpath group: 'com.install4j', name: 'gradle-plugin', version: '6.0'
      }
  }

dependencies {
        izpackconf group: 'org.codehaus.izpack', name:'izpack-standalone-compiler', version: '4.3.4'
        izpackconf group: 'org.codehaus.izpack', name:'izpack-ant', version: '5.0.3'
    }

sourceCompatibility = 1.8
targetCompatibility = 1.8
// for now, also change version in installer.xml and worldgrower.install4j
version = '1.4.2'
archivesBaseName = 'worldgrower'


jar {
    manifest {
        attributes 'Implementation-Title': 'WorldGrower',
                   'Implementation-Version': version,
                   'Main-Class': 'org.worldgrower.gui.start.StartScreen'
    }
    
    from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
    }
    
    test {
    	java {
    		srcDir 'test'
    	}
    }
}

findbugs.toolVersion = '3.0.0'
pmd.toolVersion='5.1.2'

findbugsMain {
    ignoreFailures = true
    reportLevel = "high"
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

findbugsTest {
    ignoreFailures = true
}

pmdMain {
    ignoreFailures = true
    ruleSetFiles = files(new File(rootDir, 'pmd.xml'))
    ruleSets = []
}

repositories {
    mavenCentral()
}

dependencies {
	compile files('lib/fastutil-compress-7.0.11.jar')
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
}

task release(dependsOn: ['jar', 'test']) << {
	File releaseDir = new File(buildDir, 'release')
	releaseDir.mkdir()
	
	copy {
        from 'build/libs'
        into 'build/release'
        rename { String fileName -> fileName.replace("-" + version, "") }
    }
}

task zipRelease(type: Zip) {
	from 'build/release'
}

task izpack() << {
	new File('build/izpacktemp').mkdir();
	new File('build/distributions').mkdir();

    ant.taskdef(name: 'izpackAnt',
                classname: 'com.izforge.izpack.ant.IzPackTask',
                classpath: configurations.izpackconf.asPath)
	
	//ant.properties['product.version'] = version
                
    ant.izpackAnt(
    	input: 'installer/izpack/installer.xml',
        output: 'build/distributions/worldgrower-'+version+'-install.jar',
        installerType: 'standard',
        inheritAll: 'true',
        basedir: 'build/izpacktemp',
        compression: 'deflate',
        compressionlevel: '9')
}

if (hasProperty('doRelease')) {
  if (!hasProperty('install4jHomeDir')) {
      File propertiesFile = file("gradle.properties")
      throw new RuntimeException("Specify install4jHomeDir in $propertiesFile")
  }

  install4j {
        installDir = file(install4jHomeDir)
        
  }
  
  task media(type: com.install4j.gradle.Install4jTask) {

      projectFile = file('installer/install4j/worldgrower.install4j')
        release = version
        destination = file('build/distributions')
  }
  
  release.finalizedBy zipRelease, izpack, media
}



